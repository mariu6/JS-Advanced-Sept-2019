Math.PI - числото Пи
Math.floor - закръглява към по-нското число
Math.ceil - закръглява към по-голямото число
Math.trunc - взема само цялото число без десетичната част
Math.pow (' ',' ') - повдигане на степен
Math.abs - приема абсолютната стойност на числото
Math.min/max (a, b, c....)- взема по-малката / по-голямата от стойностите в скобите
3 ** 4 - повдига число 3 на степен 4
MAX_SAFE_INTEGER - максимално число (MIN_SAFE_INTEGER - минимално)

Ascii Table - таблици за кодовете на всички символи в JS
.toLowerCase() - прави всичко с малки букви
.toUpperCase() - глави букви
% - модулно делене с остатък - отпечатва само остатъка
== - проверява само стойностите
=== - сравнява първо по ТИП и после по Стойност
!= - Не е ли равно на...(Различно ли е)
&& - тернарен оператор - (and)
|| - или(or)

.charCodeAt(0) - взема стойността от "ASCII таблицата"
String.fromCharCode() - взема character от "ASCII таблицата"
.length - връща дължината на масива
.toString() - преобразува число в стрингa
.push(...) - добавя нов елемент/и (num) в края на масива. Като резултат връща дължината на масива след операцията
.pop() - премахва елемент от края на масив  и връща неговата стойност. Променя масива
.shift() - премахва елемент от началото на масив и връща неговата стойност
.unshift(...) - прибавя елемент/и в началото на масив
.join(' - ') - прибавя елемент/сепаратор между всички елементи от масив и връща един стринг
.split(' - ') - премахва елемент/сепаратор между всички елементи (създава нов масив от стринг)
.repeat() = повтаря някакво действие (console.log(`${number} `.repeat(4))
.map((num) => num * 2) - обхожда масива и изпълява функцията за всяко число... Създава нов масив
.slice(index, index) - изрязва елементи от масива. Връща нов масив
.splice(index, deleteCount, ...) - изтрива/вкарва елементи от/в масива като променя масива 
.indexOf(num) - връща индекса на първия намерен елемент, ако го няма връща -1
.includes(num) - проверява дали даден елемент (num) го има и връща true или false
.filter((n) => n % 2 === 0) - филтрира числата като връща нов масив(в случая всички четни числа)
.sort((a, b) => a - b) - подрежда масива (в случая по възходящ ред и по първия символ). Променя масива
.sort((a, b) => a.localeCompare(b)) - подрежда по азбучен ред - използва се за имена
.reverse() = обръща масива
for of - ползва се при масиви - еквивалента е .forEach()
.concat() - обединява два масива (Пример: players[name].concat(uniqueCards))
.table() - показва обекта като таблица
.isNaN() - връща true или false 
Array.from() - създава масив от тюпели, като вход се подава обект или мап

Обекти:

for in - ползва се за обекти
Object.entries() - връща key и value в масив от тюпъли
Object.keys() - property, връща масив с пропъртитъта на обекта
Object.values() - стойност, връща масив със стойностите на обекта
Object.freeze() - заключва обекта
Object.seal() - запечатва го, (не може да се трият пропъртита,а само се променят стойностите)
.hasOwnProperty('key') - връща true или false
.find(element) - намира първия елемент от обекта и ако не го намери връща 'Undefined'
.findIndex(element) - намира индекса на първия елемент от обекта 
delete obj['name'] - изтрива пропърти от обекта - винаги връща true


Map: - приема масив от масиви, може да се итерира през него директно

let map = new Map()
.set('name', 'Joe') - сетва пропърти и стойност
.get('name') - връща стойността на пропертито
.has('name') - връща true или false
.size() - връща броя на пропъртитата в обекта
.clear() - изчиства пропъртитата на обекта
map.delete('name') - изтрива пропърти - ВРЪЩА true Или false

Set:

let set = new Set()

JSON: - 

JSON.stringify() - прави входа от скобите на стринг
JSON.parse() - от стринг към 

STRING обработка - 

.charAt() - връща стойността на индекса
+ - може да се конкатанират, но по-добрата практика използва .concat() функцията/метода
.trim() - изрязва интервалите (белите пространства) в началото и в края на стринг
.indexOf() - 
.lastIndexOf() - връща индекса на последния елемент
.substr(index, characters) - взима от индекс определен брой characters
.substring(index, endIndex) - взима от индекс включително до предходния индекс на endIndex
.replace('.bg', '.com') - променя само първия намерен текст с дадения и връща нов стринг
.find() - 
.includes() - 
.repeat(word, '*'.repeat(4))
.startsWith() - дали стринга започва с дадена дума, връща 
.endsWith()

RegEx - Regular Expression

/abc/g - намира всичко - Пример (sentence.replace(/.bg/g, '.com'))
/abc/gi - намира всичко без значение от главни и малки букви
/[ao]/g - намира поотделно двата елемента
/[a-z]/g - намира всички букви поотделно от а до z по АСКИ таблицата
/[^a]/g - намира всичко поотделно без 'а'
\w - Пример: /\w/g = /[a-zA-z0-9)]/g - ако е с главна буква означа обратното
\s - интервали и табове
\d - числата от 0 до 9
* – \+\d* - matches the previous element zero or more times
+ – matches the previous element one or more times
? – matches the previous element zero or one time
{3} - \+\d{3}  – matches the previous element exactly 3 times - {3,} - три или повече пъти
() - със скобите се дефинира група
\1 - извиква 1-ва група от първите скоби
| - или
^......$ - означение за начало и край на стринга 
работещи само върху RegExp
	pattern.test() - връща true или false - 
работещи върху стринга
	'string'.match(pattern) - връща стойностите на match в масив 
	pattern.exec(string) - връща стойностите
	.replace() - заменя
	.split() - разделя


